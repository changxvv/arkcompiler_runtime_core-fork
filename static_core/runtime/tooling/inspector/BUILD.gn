# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/runtime_core/static_core/ark_config.gni")

libarkinspector_sources = [
  "asio_server.cpp",
  "debug_info_cache.cpp",
  "debuggable_thread.cpp",
  "endpoint.cpp",
  "error.cpp",
  "event_loop.cpp",
  "init.cpp",
  "inspector.cpp",
  "inspector_server.cpp",
  "object_repository.cpp",
  "session_manager.cpp",
  "source_manager.cpp",
  "thread_state.cpp",
  "types/location.cpp",
  "types/remote_object.cpp",
  "types/scope.cpp",
  "ws_logger.cpp",
]

config("libarkinspector_config") {
  cflags_cc = [
    "-fexceptions",
    "-Wno-invalid-offsetof",
    "-Wno-null-pointer-subtraction",
    "-Wno-error=unknown-warning-option",
  ]
  defines = [
    "ASIO_NO_TYPEID",
    "ASIO_STANDALONE",
  ]
}

ohos_shared_library("libarkinspector") {
  configs = [
    "$ark_root:ark_config",
    "$ark_root/compiler:arkcompiler_public_config",
    "$ark_root/disassembler:arkdisassembler_public_config",
    "$ark_root/libpandabase:arkbase_public_config",
    "$ark_root/libpandafile:arkfile_public_config",
    "$ark_root/runtime:arkruntime_public_config",
    ":libarkinspector_config",
    sdk_libc_secshared_config,
  ]
  deps = [
    "$ark_root/compiler:libarktscompiler",
    "$ark_root/disassembler:arkdisassembler",
    "$ark_root/libpandabase:libarktsbase",
    "$ark_root/libpandafile:libarktsfile",
    "$ark_root/runtime:libarkruntime",
    sdk_libc_secshared_dep,
  ]
  sources = libarkinspector_sources
  include_dirs = [
    "$ark_root/runtime/include",
    "$ark_third_party_root/asio/asio/include",
    "$ark_third_party_root/websocketpp",
    get_label_info("$ark_root/assembler:isa_gen_libarkassembler", "target_gen_dir"),
    get_label_info("$ark_root/disassembler:disasm_plugins_inc", "target_gen_dir"),
  ]

  if (!is_mingw && !is_mac) {
    output_extension = "so"
  }
  part_name = ark_part_name
  subsystem_name = "$ark_subsystem_name"
}

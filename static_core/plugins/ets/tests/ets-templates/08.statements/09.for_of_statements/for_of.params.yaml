# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - use: |-
          let arr: int[] = new int[0]
          for (let v of arr) res += v
          if (res == "") return 0;

    - use: |-
          let arr: int[]|null = new int[0]
          for (let v of arr!) res += v
          if (res == "") return 0;

    - use: |-
          for (let v of "") res += v
          if (res == "") return 0;

    - use: |-
          let s: String|null = ""
          for (let v of s!) res += v
          if (res == "") return 0;

    - use: |-
          let arr: int[][] = [[1,2,3], [4,5,6], [7,8,9]]
          for (const v of arr) {
              res += ' '
              for (const q of v)
                  res += q
          }
          if (res == " 123 456 789") return 0;

    - use: |-
          const v: int = 0;
          for (let v of [1,2,3,4]) res += v
          if (res == "1234" && v == 0) return 0;

    - use: |-
          let v: int
          for (v of [1,2,3,4]) res += v
          if (res == "1234") return 0;

    - use: |-
          for (const ch of [c'1', c'2', c'3', c'4']) res += ch
          if (res == "1234") return 0;

    - use: |-
          let foo: () => String = ():String => { return "ABCD" }
          for (let ch of foo()) res += ch
          if (res == "ABCD") return 0;

    - use: |-
          const ch: char = c'X'
          for (let ch of "A" + "B" + "CD") {
              res += ch
              ch = c' '
              res += ch
          }
          if (res == "A B C D ") return 0;

    - use: |-
          let ch: char
          for (ch of "ABCD") res += ch
          if (res == "ABCD") return 0;

    - use: |-
          let ch: char
          for (ch of "ABCD") {
              res += ch
              ch = c' '
              res += ch
          }
          if (res == "A B C D ") return 0;

    - use: |-
          let arr: Long[] = new Long[3]
          for (let i: int = 0; i < 3; i++) arr[i] = new Long(i as long)
          for (let i of arr) res += i
          if (res == "012") return 0;

    - use: |-
          let arr: int[] = [1,2,3]
          for (let v of arr) {v *= 2; res += v }
          if (res == "246") return 0;

    - use: |-
          let arr: int[] = [1,2,3]
          let v = 4
          for (v of arr); res += v
          if (res == "3") return 0;

    - decl: |-
          function foo<T extends String>(s: T): T[] {
              return [s, s, s];
          }
      use: |-
          for (let v of foo<String>("A")) res += v
          if (res == "AAA") return 0;

    - use: |-
          let s: string|null = null
          try {
              for (let v of s!) res += v
          } catch (e: NullPointerException) {
              res = "OK"
          }
          if (res == "OK") return 0;

    - use: |-
          let s: string|undefined = undefined
          try {
              for (let v of s!) res += v
          } catch (e: NullPointerException) {
              res = "OK"
          }
          if (res == "OK") return 0;

    - use: |-
          let s: number[]|null = null
          try {
              for (let v of s!) res += v
          } catch (e: NullPointerException) {
              res = "OK"
          }
          if (res == "OK") return 0;

    - use: |-
          let s: number[]|undefined = undefined
          try {
              for (let v of s!) res += v
          } catch (e: NullPointerException) {
              res = "OK"
          }
          if (res == "OK") return 0;

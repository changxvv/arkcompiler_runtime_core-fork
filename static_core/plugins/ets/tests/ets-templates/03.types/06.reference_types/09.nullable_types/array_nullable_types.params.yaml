--- # List of declarations
nullables:
    - { type: '(Int|null)[]', vals: '[null]', val: 'new Int(1)', assert: 'x[0].unboxed() == 1' }
    - { type: '(Int|null|null)[]', vals: '[new Int(1)]', val: 'null', assert: 'x[0] == null' }

    - { type: '(Int|null)[][]', vals: '[[null]]', val: 'new Int[1]; x[0][0] = new Int(42)', assert: 'x[0][0].unboxed() == 42' }
    - { type: '(Int|null|null)[][]', vals: '[[new Int(42)]]', val: 'new Int[1]; x[0][0] = null', assert: 'x[0][0] == null' }

    - decl: |-
        type Z = Int | null
      type: 'Z[]'
      vals: '[new Int(1)]'
      val: 'null'
      assert: 'x[0] == null'

    - decl: |-
        type Z = Int | null | null
      type: 'Z[]'
      vals: '[null]'
      val: 'new Int(66)'
      assert: 'x[0].unboxed() == 66'

    - decl: |-
        type Z = (Int | null)[]
      type: 'Z'
      vals: '[new Int(1)]'
      val: 'null'
      assert: 'x[0] == null'

    - decl: |-
        type Z = (Int | null | null)[]
      type: 'Z'
      vals: '[null]'
      val: 'new Int(66)'
      assert: 'x[0].unboxed() == 66'

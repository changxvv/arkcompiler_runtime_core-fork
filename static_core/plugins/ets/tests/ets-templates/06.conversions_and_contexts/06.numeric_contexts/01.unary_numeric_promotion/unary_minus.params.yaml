---
cases:
  - { type: byte, val: 42, r: [5, 5, 5, -42, 42, -42] }
  - { type: byte, val: -42, r: [5, 5, 5, 42, -42, 42] }
  - { type: short, val: 255, r: [5, 5, 5, -255, 255, -255] }
  - { type: short, val: -255, r: [5, 5, 5, 255, -255, 255] }
  - { type: char, val: "c'A'", r: [5, 5, 5, -65, 65, -65] }
  - { type: char, val: "c'\\uFFFF'", r: [5, 5, 5, -65535, 65535, -65535] }
  - { type: int, val: '0xFFFFFFFF', r: [5, 5, 5, 1, -1, 1] }
  - { type: long, val: '0xFFFFFFFFFFFFFFFF', r: [6, 6, 6, 1, -1, 1] }
  - { type: float, val: 1.0, r: [7, 7, 7, -1.0, 1.0, -1.0] }
  - { type: double, val: 1.00, r: [8, 8, 8, -1.0, 1.0, -1.0] }
  - { type: Byte, val: new Byte(3 as byte), r: [5, 5, 5, -3, 3, -3] }
  - { type: Short, val: new Short(0x1ff as short), r: [5, 5, 5, -511, 511, -511] }
  - { type: Char, val: new Char(c' '), r: [5, 5, 5, -32, 32, -32] }
  - { type: Int, val: new Int(128), r: [5, 5, 5, -128, 128, -128] }
  - { type: Long, val: new Long(1 as long), r: [6, 6, 6, -1, 1, -1] }
  - { type: Float, val: new Float(1.0 as float), r: [7, 7, 7, -1.0, 1.0, -1.0] }
  - { type: Double, val: new Double(1.00 as double), r: [8, 8, 8, -1.0, 1.0, -1.0] }

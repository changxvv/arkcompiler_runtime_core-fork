# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- {
    func_name: max,
    method_name: Math.max,
    method_nature: function, 
    result_type: double,
    method_signature:  {v: "double", u: "double"},

    method_test_index_data:
      {
        test10:  {v:  128.0, u:  256.0},
        test20:  {v:  139.0, u:  139.0},
        test30:  {v: -233.0, u: -233.0},
        test40:  {v: -234.0, u: -133.0},
        test50:  {v:  777.0, u:  777.0 + doubleEpsilon},
        test60:  {v: -777.0 - doubleEpsilon, u: -777.0},
        test70:  {v: doubleNaN, u: doubleNaN},
        test80:  {v: doubleInf, u: doubleInf},
        test90:  {v: doubleNegInf, u: doubleNegInf},
        test100: {v: doubleMaximum, u: 0.0},
        test110: {v: 256.0, u: doubleMinimum},

      },
    method_expected_data:
      {
        test10:  256.0,
        test20:  139.0,
        test30: -233.0,
        test40: -133.0,
        test50:  777.0 + doubleEpsilon,
        test60: -777.0, 
        test70:  doubleNaN,
        test80:  doubleInf,
        test90:  doubleNegInf,
        test100: doubleMaximum,
        test110: 256.0
      },
  }
- {
    func_name: max,
    method_name: Math.max,
    method_nature: function, 
    result_type: double,
    method_signature:  {v: "double", u: "double", z: "double"},

    method_test_index_data:
      {
        test10:  {v:  128.0, u:  256.0, z:  198.0},
        test20:  {v:  139.0, u:  139.0, z:  43.0},
        test30:  {v: -233.0, u: -233.0, z: -289.0},
        test40:  {v: -234.0, u: -133.0, z: -176.0},
        test50:  {v:  777.0, u:  777.0 + doubleEpsilon, z: 777.0 - doubleEpsilon},
        test60:  {v: -777.0 - doubleEpsilon, u: -777.0, z: -777.0 + doubleEpsilon},
        test70:  {v: doubleNaN, u: doubleNaN, z: doubleNaN},
        test80:  {v: doubleInf, u: doubleInf, z: doubleInf},
        test90:  {v: doubleNegInf, u: doubleNegInf, z: doubleNegInf},
        test100: {v: doubleMaximum, u: 256.0, z: doubleMinimum}

      },
    method_expected_data:
      {
        test10:  256.0,
        test20:  139.0,
        test30: -233.0,
        test40: -133.0,
        test50:  777.0 + doubleEpsilon,
        test60: -777.0 + doubleEpsilon, 
        test70:  doubleNaN,
        test80:  doubleInf,
        test90:  doubleNegInf,
        test100: doubleMaximum
      },
  }
- {
    func_name: min,
    method_name: Math.min,
    method_nature: function, 
    result_type: double,
    method_signature:  {v: "double", u: "double"},

    method_test_index_data:
      {
        test10:  {v:  128.0, u:  256.0},
        test20:  {v:  139.0, u:  139.0},
        test30:  {v: -233.0, u: -233.0},
        test40:  {v: -234.0, u: -133.0},
        test50:  {v:  777.0, u:  777.0 + doubleEpsilon},
        test60:  {v: -777.0 - doubleEpsilon, u: -777.0},
        test70:  {v: doubleNaN, u: doubleNaN},
        test80:  {v: doubleInf, u: doubleInf},
        test90:  {v: doubleNegInf, u: doubleNegInf},
        test100: {v: doubleMaximum, u: 0.0},
        test110: {v: doubleMinimum, u: 256.0},

      },
    method_expected_data:
      {
        test10:  128.0,
        test20:  139.0,
        test30: -233.0,
        test40: -234.0,
        test50:  777.0,
        test60: -777.0 - doubleEpsilon, 
        test70:  doubleNaN,
        test80:  doubleInf,
        test90:  doubleNegInf,
        test100: 0.0,
        test110: doubleMinimum
      },
  }
- {
    func_name: min,
    method_name: Math.min,
    method_nature: function, 
    result_type: double,
    method_signature:  {v: "double", u: "double", z: "double"},

    method_test_index_data:
      {
        test10:  {v:  128.0, u:  256.0, z:  198.0},
        test20:  {v:  139.0, u:  139.0, z:  143.0},
        test30:  {v: -233.0, u: -233.0, z: -198.0},
        test40:  {v: -234.0, u: -133.0, z: -176.0},
        test50:  {v:  777.0, u:  777.0 + doubleEpsilon, z: 777.0 - doubleEpsilon},
        test60:  {v: -777.0 - doubleEpsilon, u: -777.0, z: -777.0 + doubleEpsilon},
        test70:  {v: doubleNaN, u: doubleNaN, z: doubleNaN},
        test80:  {v: doubleInf, u: doubleInf, z: doubleInf},
        test90:  {v: doubleNegInf, u: doubleNegInf, z: doubleNegInf},
        test100: {v: doubleMaximum, u: doubleMinimum, z: 128.0}

      },
    method_expected_data:
      {
        test10:  128.0,
        test20:  139.0,
        test30: -233.0,
        test40: -234.0,
        test50:  777.0 - doubleEpsilon,
        test60: -777.0 - doubleEpsilon, 
        test70:  doubleNaN,
        test80:  doubleInf,
        test90:  doubleNegInf,
        test100: doubleMinimum,
      },
}

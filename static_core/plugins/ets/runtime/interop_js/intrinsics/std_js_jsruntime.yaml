# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

coretypes:
- managed_class: std.core.Object
  mirror_class: ark::ets::EtsObject

- managed_class: std.core.void
  mirror_class: ark::ets::EtsVoid

- managed_class: std.core.String
  mirror_class: ark::ets::EtsString

- managed_class: std.core.Class
  mirror_class: ark::ets::EtsClass

- managed_class: std.interop.js.JSValue
  mirror_class: ark::ets::interop::js::JSValue


intrinsics_namespace: ark::ets::interop::js::intrinsics


####################
# std.js.JSRuntime #
####################
intrinsics:
  - name: JSRuntimeFinalizationRegistryCallback
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: finalizationRegistryCallback
    static: true
    signature:
      ret: std.core.void
      args: [ std.core.Object ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeFinalizationRegistryCallbackIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeNewJSValueDouble
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: newJSValueDouble
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ f64 ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeNewJSValueDoubleIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeNewJSValueString
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: newJSValueString
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeNewJSValueStringIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeNewJSValueObject
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: newJSValueObject
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.core.Object ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeNewJSValueObjectIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetValueDouble
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getValueDouble
    static: true
    signature:
      ret: f64
      args: [ std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetValueDoubleIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetValueBoolean
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getValueBoolean
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetValueBooleanIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetValueString
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getValueString
    static: true
    signature:
      ret: std.core.String
      args: [ std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetValueStringIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetValueObject
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getValueObject
    static: true
    signature:
      ret: std.core.Object
      args: [ std.interop.js.JSValue, std.core.Object ] # 2nd argument is ClassClass
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetValueObjectIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetPropertyJSValue
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getPropertyJSValue
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.interop.js.JSValue, std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetPropertyJSValueIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetPropertyDouble
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getPropertyDouble
    static: true
    signature:
      ret: f64
      args: [ std.interop.js.JSValue, std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetPropertyDoubleIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetPropertyString
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getPropertyString
    static: true
    signature:
      ret: std.core.String
      args: [ std.interop.js.JSValue, std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetPropertyStringIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeSetPropertyJSValue
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: setPropertyJSValue
    static: true
    signature:
      ret: std.core.void
      args: [ std.interop.js.JSValue, std.core.String, std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeSetPropertyJSValueIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeSetPropertyDouble
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: setPropertyDouble
    static: true
    signature:
      ret: std.core.void
      args: [ std.interop.js.JSValue, std.core.String, f64 ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeSetPropertyDoubleIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeSetPropertyString
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: setPropertyString
    static: true
    signature:
      ret: std.core.void
      args: [ std.interop.js.JSValue, std.core.String, std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeSetPropertyStringIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetElementJSValue
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getElementJSValue
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.interop.js.JSValue, i32 ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetElementJSValueIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetElementDouble
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getElementDouble
    static: true
    signature:
      ret: f64
      args: [ std.interop.js.JSValue, i32 ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetElementDoubleIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetUndefined
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getUndefined
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetUndefinedIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetNull
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getNull
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetNullIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeGetGlobal
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getGlobal
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetGlobalIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeCreateObject
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: createObject
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeCreateObjectIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeInstanceOf
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: instanceOf
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeInstanceOfIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeInitJSCallClass
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: __initJSCallClass
    static: true
    signature:
      ret: u1
      args: [ std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeInitJSCallClassIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeInitJSNewClass
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: __initJSNewClass
    static: true
    signature:
      ret: u1
      args: [ std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeInitJSNewClassIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeCreateLambdaProxy
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: __createLambdaProxy
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.core.Object ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeCreateLambdaProxyIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeLoadModule
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: loadModule
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeLoadModuleIntrinsic
    clear_flags: [ ]

  - name: JSRuntimeStrictEqual
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: strictEqual
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeStrictEqualIntrinsic
    clear_flags: [ ]

#######################
# Internal intrinsics #
#######################
  - name: CompilerGetJSNamedProperty
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr, ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerGetJSNamedPropertyIntrinsic
    interop_intrinsic_kind: creates_local
    clear_flags: [ ]

  - name: CompilerResolveQualifiedJSCall
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr, std.core.String]
    impl: ark::ets::interop::js::intrinsics::CompilerResolveQualifiedJSCallIntrinsic
    interop_intrinsic_kind: creates_local
    clear_flags: [ ]

  - name: CompilerJSCallCheck
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerJSCallCheckIntrinsic
    interop_intrinsic_kind: need_scope
    clear_flags: [ ]

  - name: CompilerJSCallFunction
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr, ptr, u32]
      stackrange: true
    impl: ark::ets::interop::js::intrinsics::CompilerJSCallFunctionIntrinsic
    interop_intrinsic_kind: creates_local
    clear_flags: [ ]

  - name: CompilerJSCallVoidFunction
    space: ets
    compiler_only: true
    signature:
      ret: void
      args: [ptr, ptr, u32]
      stackrange: true
    impl: ark::ets::interop::js::intrinsics::CompilerJSCallVoidFunctionIntrinsic
    interop_intrinsic_kind: need_scope
    clear_flags: [ ]

  - name: CompilerJSNewInstance
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr, u32]
      stackrange: true
    impl: ark::ets::interop::js::intrinsics::CompilerJSNewInstanceIntrinsic
    interop_intrinsic_kind: creates_local
    clear_flags: [ ]

  - name: CompilerCreateLocalScope
    space: ets
    compiler_only: true
    signature:
      ret: void
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::CompilerCreateLocalScopeIntrinsic
    clear_flags: [ ]

  - name: CompilerDestroyLocalScope
    space: ets
    compiler_only: true
    signature:
      ret: void
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::CompilerDestroyLocalScopeIntrinsic
    clear_flags: [ ]

########################################################
# Internal intrinsics, convert ets value to napi_value #
########################################################
  - name: CompilerConvertVoidToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: []
    impl: ark::ets::interop::js::intrinsics::CompilerConvertVoidToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertU1ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [u1]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertU1ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertU8ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [u8]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertU8ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertI8ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [i8]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertI8ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertU16ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [u16]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertU16ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertI16ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [i16]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertI16ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertU32ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [u32]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertU32ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertI32ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [i32]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertI32ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertU64ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [u64]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertU64ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertI64ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [i64]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertI64ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertF32ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [f32]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertF32ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertF64ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [f64]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertF64ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertRefTypeToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [std.core.Object]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertRefTypeToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

  - name: CompilerConvertJSValueToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [std.interop.js.JSValue]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertJSValueToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce]

########################################################
# Internal intrinsics, convert napi_value to ets value #
########################################################
  - name: CompilerConvertLocalToU1
    space: ets
    compiler_only: true
    signature:
      ret: u1
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToU1Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToU8
    space: ets
    compiler_only: true
    signature:
      ret: u8
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToU8Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToI8
    space: ets
    compiler_only: true
    signature:
      ret: i8
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToI8Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToU16
    space: ets
    compiler_only: true
    signature:
      ret: u16
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToU16Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToI16
    space: ets
    compiler_only: true
    signature:
      ret: i16
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToI16Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToU32
    space: ets
    compiler_only: true
    signature:
      ret: u32
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToU32Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToI32
    space: ets
    compiler_only: true
    signature:
      ret: i32
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToI32Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToU64
    space: ets
    compiler_only: true
    signature:
      ret: u64
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToU64Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToI64
    space: ets
    compiler_only: true
    signature:
      ret: i64
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToI64Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToF32
    space: ets
    compiler_only: true
    signature:
      ret: f32
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToF32Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToF64
    space: ets
    compiler_only: true
    signature:
      ret: f64
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToF64Intrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToJSValue
    space: ets
    compiler_only: true
    signature:
      ret: std.interop.js.JSValue
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToJSValueIntrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [no_dce]
  
  - name: CompilerConvertLocalToString
    space: ets
    compiler_only: true
    signature:
      ret: std.core.String
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToStringIntrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

  - name: CompilerConvertLocalToRefType
    space: ets
    compiler_only: true
    signature:
      ret: std.core.Object
      args: [ptr, ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToRefTypeIntrinsic
    interop_intrinsic_kind: unwrap
    set_flags: [can_throw]
    clear_flags: [ ]

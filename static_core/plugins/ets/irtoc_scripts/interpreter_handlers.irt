# plugin interpreter_handlers
# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include_relative '../../plugins/ets/irtoc_scripts/common.irt'

['static', 'virt'].each do |dispatch|
  ['short', 'long', 'range'].each do |flavor|
    macro(:"handle_ets_launch_#{dispatch}_#{flavor}") do |v, id|
      # TODO(mbolshov): verify method
      method_ptr = get_callee(id, dispatch == 'virt', false, v)
      verify(method_ptr, false)
      set_acc_object(call_runtime("LaunchFromInterpreter#{flavor.capitalize}", method_ptr, %frame, pc).ptr)
      If(acc, 0).EQ {
        move_to_exception
      }
    end
  end
end

macro(:handle_ets_ldundefined) do
  set_acc_object(ets_undefined).ref
end

macro(:handle_ets_movundefined) do |vd|
  set_object(vd, ets_undefined).ref
end

macro(:handle_ets_isundefined) do
  set_acc_primitive(btou32(Compare(acc.ref, ets_undefined).b))
end
